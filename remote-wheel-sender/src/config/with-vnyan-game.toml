# This configuration file is set up to send the rotation of the wheel, as well as shift paddle and
# pedal inputs, to another application via OSC. This is intended to be used in conjunction with
# another instance of the Sender running the corresponding configuration on another PC to allow for
# the input values to be injected into VNyan, to pose the avatar and/or peripheral props.
#
# A VNyan node graph and props that are intended to work with this configuration can be found at:
# https://github.com/barinzaya/remote-wheel/tree/main/vnyan
#
# There are CHANGEME tags in the configuration below that indicate things you may need to change.
# Upon closing, this configuration will be saved as remote-wheel-sender.toml, and you may edit it
# again at any time.
#
# The configuration is organized into sections, with each section indicated by a section header in
# square brackets. Double square brackets may also be used for section headers of which there can be
# more than one.
#
# All configuration entries (lines of the format key = value) belong to the last section for which
# there was a header. Indentation is optional, but can help make the file more readable.
#
# Any text after a # character, such as this text, is called a comment. Comments are ignored, and do
# not affect the configuration. Comments can be used to add notes, such as these, or to temporarily
# remove values that you may want to add back in later. You may remove any comment without affecting
# the configuration.

[osc]
	enabled = true
	input.address = "0.0.0.0:0"
	output.address = "255.255.255.255:19794" # CHANGEME: Though this may work as-is, you should replace 255.255.255.255 with the actual IP address of the stream PC.


[[axis.wheel.input]]
	# CHANGEME: Change this to the name of the steering wheel controller and the axis number of
	# the steering axis. The Sender application will log the names of all connected controllers
	# when run, you can grab the name there.
	controller.name = "Controller Name"
	controller.axis = 1

[axis.wheel.output.osc.on-update]
	"/wheel/rotation" = [ {input=[-450,450]} ] # CHANGEME: If your wheel is not a 900-degree wheel (450 degrees from center each way), change this range.


[[button.shift-up.input]]
	# CHANGEME: Change this to the name of the steering wheel controller and the button number of
	# the shift-up paddle. The Sender application will log the names of all connected controllers
	# when run, you can grab the name there.
	controller.name = "Controller Name"
	controller.button = 2

[button.shift-up.output.osc.on-update]
	"/wheel/shift-up" = [ {input=[]} ]


[[button.shift-down.input]]
	# CHANGEME: Change this to the name of the steering wheel controller and the button number of
	# the shift-down paddle. The Sender application will log the names of all connected controllers
	# when run, you can grab the name there.
	controller.name = "Controller Name"
	controller.button = 1

[button.shift-down.output.osc.on-update]
	"/wheel/shift-down" = [ {input=[]} ]


[[axis.gas.input]]
	# CHANGEME: Change this to the name of the steering wheel controller and the axis number of
	# the gas pedal axis. The Sender application will log the names of all connected controllers
	# when run, you can grab the name there.
	controller.name = "Controller Name"
	controller.axis = 3

[axis.gas.output.osc.on-update]
	"/pedals/gas" = [ {input=[0,1]} ]


[[axis.brake.input]]
	# CHANGEME: Change this to the name of the steering wheel controller and the axis number of
	# the brake pedal axis. The Sender application will log the names of all connected controllers
	# when run, you can grab the name there.
	controller.name = "Controller Name"
	controller.axis = 2

[axis.brake.output.osc.on-update]
	"/pedals/brake" = [ {input=[0,1]} ]


[[axis.clutch.input]]
	# CHANGEME: Change this to the name of the steering wheel controller and the axis number of
	# the clutch pedal axis. The Sender application will log the names of all connected controllers
	# when run, you can grab the name there.
	controller.name = "Controller Name"
	controller.axis = 4

[axis.clutch.output.osc.on-update]
	"/pedals/clutch" = [ {input=[0,1]} ]
